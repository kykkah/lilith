// Per-module dependencies and overrides for Lilith

apply from: 'dependencyDefinitions.gradle'

subprojects { proj ->
    // Only configure test deps once java plugin is present
    plugins.withId('java') {
        dependencies {
            testImplementation libraries.'junit'
            testImplementation libraries.'groovy'
            testImplementation libraries.'spock-core'
            testImplementation libraries.'sulky-junit'
            testImplementation libraries.'slf4j-api'
        }
    }
}

project(':lilith-data:eventsource-xml') {
    plugins.withId('java') {
        dependencies {
            implementation libraries.'sulky-stax'
            implementation project(':lilith-data:eventsource')
            runtimeOnly libraries.'woodstox'
        }
    }
}
// Application module packaging (fat jar + distributions)
project(':lilith') {
    apply plugin: 'application'
    // Shadow plugin via plugin DSL declared in root (apply false)
    apply plugin: 'com.github.johnrengelman.shadow'

    application {
        mainClass = 'de.huxhorn.lilith.Lilith'
        applicationName = 'lilith'
    }

    jar {
        manifest {
            attributes 'Main-Class': 'de.huxhorn.lilith.Lilith'
        }
    }

    // Minimal runtime deps commonly used by the app; expand as needed
    dependencies {
        implementation libraries.'slf4j-api'
        implementation libraries.'slf4j-jul'
        implementation libraries.'logback-classic'
        implementation libraries.'logback-access'
        implementation libraries.'commons-io'
        implementation libraries.'commons-lang3'
        implementation libraries.'commons-text'
        implementation libraries.'flying-saucer-core'
        implementation libraries.'glazedlists'
        implementation libraries.'jcommander'
        implementation libraries.'commons-codec'
        implementation libraries.'servlet-api'
        implementation libraries.'httpclient'
        implementation libraries.'httpcore'
        implementation libraries.'groovy'
        implementation libraries.'groovy-console'
        implementation libraries.'groovy-xml'
        implementation libraries.'thymeleaf'

        // Internal tooling modules
        implementation project(':logback:tools')

        // Lilith modules
        implementation project(':lilith-engine')
        implementation project(':lilith-conditions')
        implementation project(':lilith-constants')
        implementation project(':lilith-prefs')
        implementation project(':lilith-json-logging')
        implementation project(':lilith-xml-logging')
        implementation project(':lilith-data:logging')
        implementation project(':lilith-data:access')
        implementation project(':lilith-data:converter')
        implementation project(':lilith-data:eventsource')
        implementation project(':lilith-data:eventsource-xml')
        implementation project(':lilith-data:logging-xml')
        implementation project(':lilith-data:logging-xml-serializer')
        implementation project(':lilith-data:logging-json-serializer')
        implementation project(':jul:jul-xml-import')
        implementation project(':jul:jul-xml-receiver')
        implementation project(':log4j:converter-log4j')
        implementation project(':log4j:converter-log4j2')
        implementation project(':log4j:producer-log4j2')
        implementation project(':log4j:log4j-xml')
        implementation project(':logback:classic')
        testImplementation project(':lilith-data:corpus')
        testImplementation libraries.'sulky-junit'
        testRuntimeOnly libraries.'objenesis'
        testRuntimeOnly libraries.'byte-buddy'
        runtimeOnly libraries.'jcl-over-slf4j'
        runtimeOnly libraries.'log4j2-core'
        runtimeOnly libraries.'spring-boot-ext-logback-access'
        runtimeOnly libraries.'spring-webmvc'
        runtimeOnly libraries.'woodstox'
        testRuntimeOnly libraries.'woodstox'
        runtimeOnly project(':lilith-sounds')

        // JUnique helper (disabled for now)
        // implementation libraries.'junique'

        // Sulky libraries used by the app
        implementation libraries.'sulky-formatting'
        implementation libraries.'sulky-io'
        implementation libraries.'sulky-buffers'
        implementation libraries.'sulky-buffers-filtering'
        implementation libraries.'sulky-buffers-table'
        implementation libraries.'sulky-codec'
        implementation libraries.'sulky-codec-filebuffer'
        implementation libraries.'sulky-conditions'
        implementation libraries.'sulky-swing'
        implementation libraries.'sulky-tasks'
        implementation libraries.'sulky-ulid'
        implementation libraries.'sulky-sounds-api'
        implementation libraries.'sulky-sounds-impl-jlayer'
        implementation libraries.'sulky-groovy'

        // Logback app modules needed by the app
        implementation project(':logback:encoder-core')
        implementation project(':logback:encoder-classic')
        implementation project(':logback:encoder-access')
        implementation project(':logback:converter-classic')
        implementation project(':logback:converter-access')
        implementation project(':logback:multiplex-appender-core')
        implementation project(':logback:multiplex-appender-access')
        implementation project(':logback:multiplex-appender-classic')
        implementation project(':logback:multiplex-appender-classic-xml')
        implementation project(':logback:multiplex-appender-classic-json')
    }
}

// Engine uses sulky buffers/codecs/io/formatting
project(':lilith-engine') {
    plugins.withId('java') {
        dependencies {
            implementation libraries.'sulky-buffers'
            implementation libraries.'sulky-codec'
            implementation libraries.'sulky-codec-filebuffer'
            implementation libraries.'sulky-io'
            implementation libraries.'sulky-formatting'
            implementation libraries.'sulky-conditions'
            implementation libraries.'slf4j-api'
            implementation project(':lilith-data:eventsource')
            implementation project(':lilith-data:logging')
            implementation project(':lilith-data:access')
            implementation project(':lilith-data:converter')
            implementation project(':lilith-data:logging-protobuf')
            implementation project(':lilith-data:access-protobuf')
            implementation project(':lilith-constants')
            implementation project(':lilith-sender')
            testImplementation libraries.'logback-classic'
            testImplementation libraries.'junit-jupiter-api'
            testImplementation libraries.'junit-jupiter-params'
            testRuntimeOnly libraries.'junit-jupiter-engine'
        }
        tasks.withType(Test).configureEach { useJUnitPlatform() }
    }
}

// Data modules
project(':lilith-data:logging') {
    plugins.withId('java') {
        dependencies {
            implementation libraries.'sulky-formatting'
            implementation project(':lilith-data:eventsource')
            testImplementation libraries.'junit-jupiter-api'
            testImplementation libraries.'junit-jupiter-params'
            testRuntimeOnly libraries.'junit-jupiter-engine'
        }
        tasks.withType(Test).configureEach { useJUnitPlatform() }
    }
}

project(':lilith-data:corpus') {
    plugins.withId('groovy') {
        dependencies {
            implementation libraries.'groovy'
            implementation libraries.'slf4j-api'
            implementation project(':lilith-data:access')
            implementation project(':lilith-data:eventsource')
            implementation project(':lilith-data:logging')
        }
    }
}

project(':lilith-data:logging-io-test') {
    plugins.withId('java') {
        dependencies {
            implementation libraries.'junit'
            implementation libraries.'slf4j-api'
            implementation libraries.'sulky-formatting'
            implementation libraries.'sulky-junit'
            implementation project(':lilith-data:eventsource')
            implementation project(':lilith-data:logging')
        }
    }
}

// JSON logging engine module needs engine + json serializer
project(':lilith-json-logging') {
    plugins.withId('java') {
        dependencies {
            implementation project(':lilith-engine')
            implementation project(':lilith-data:logging')
            implementation project(':lilith-data:eventsource')
            implementation project(':lilith-data:logging-json-serializer')
            implementation libraries.'sulky-buffers'
            implementation libraries.'sulky-codec'
        }
    }
}

project(':lilith-xml-logging') {
    plugins.withId('java') {
        dependencies {
            implementation project(':lilith-engine')
            implementation project(':lilith-data:logging')
            implementation project(':lilith-data:eventsource')
            implementation project(':lilith-data:logging-xml')
            implementation project(':lilith-data:logging-xml-serializer')
            implementation libraries.'sulky-buffers'
            implementation libraries.'sulky-codec'
            implementation libraries.'slf4j-api'
            implementation libraries.'sulky-stax'
            testImplementation libraries.'junit-jupiter-api'
            testRuntimeOnly libraries.'junit-jupiter-engine'
        }
        tasks.withType(Test).configureEach { useJUnitPlatform() }
    }
}

project(':lilith-data:logging-xml') {
    plugins.withId('java') {
        dependencies {
            implementation libraries.'sulky-formatting'
            implementation libraries.'sulky-stax'
            implementation project(':lilith-data:eventsource')
            implementation project(':lilith-data:logging')
            runtimeOnly libraries.'woodstox'
            testImplementation project(':lilith-data:logging-io-test')
            testRuntimeOnly libraries.'woodstox'
        }
    }
}

project(':lilith-data:logging-xml-serializer') {
    plugins.withId('java') {
        dependencies {
            implementation libraries.'sulky-formatting'
            implementation libraries.'sulky-codec'
            implementation libraries.'sulky-stax'
            implementation project(':lilith-data:logging-xml')
            implementation project(':lilith-data:logging')
            runtimeOnly libraries.'woodstox'
            testImplementation project(':lilith-data:logging-io-test')
            testRuntimeOnly libraries.'woodstox'
        }
    }
}


// Eventsource base module may not need external deps beyond JDK

project(':lilith-data:access') {
    plugins.withId('java') {
        dependencies {
            implementation project(':lilith-data:eventsource')
        }
    }
}

project(':lilith-data:access-protobuf') {
    plugins.withId('java') {
        dependencies {
            implementation project(':lilith-data:access')
            implementation project(':lilith-data:eventsource')
            implementation libraries.'protobuf'
            implementation libraries.'sulky-codec'
            testImplementation libraries.'slf4j-api'
        }
    }
}

project(':lilith-data:logging-protobuf') {
    plugins.withId('java') {
        dependencies {
            implementation project(':lilith-data:logging')
            implementation project(':lilith-data:eventsource')
            implementation libraries.'protobuf'
            implementation libraries.'sulky-codec'
            testImplementation project(':lilith-data:logging-io-test')
        }
    }
}

// Conditions and groovy support
project(':lilith-conditions') {
    plugins.withId('java') {
        dependencies {
            implementation libraries.'groovy'
            implementation libraries.'slf4j-api'
            implementation libraries.'sulky-conditions'
            implementation libraries.'sulky-groovy'
            implementation project(':lilith-data:logging')
            implementation project(':lilith-data:access')
            implementation project(':lilith-data:eventsource')
            testImplementation project(':lilith-data:corpus')
        }
    }
}

// Sender needs IO
project(':lilith-sender') {
    plugins.withId('java') {
        dependencies {
            implementation libraries.'sulky-io'
        }
    }
}

// JUL and Log4j modules using stax/formatting/tasks/buffers
project(':jul:jul-xml') {
    plugins.withId('java') {
        dependencies {
            implementation libraries.'sulky-stax'
            implementation libraries.'sulky-formatting'
            implementation libraries.'slf4j-api'
            implementation project(':lilith-data:logging')
            runtimeOnly libraries.'woodstox'
        }
    }
}

project(':jul:jul-xml-receiver') {
    plugins.withId('java') {
        dependencies {
            implementation libraries.'sulky-buffers'
            implementation libraries.'sulky-formatting'
            implementation libraries.'sulky-stax'
            implementation libraries.'slf4j-api'
            implementation project(':lilith-engine')
            implementation project(':lilith-data:logging')
            implementation project(':lilith-data:eventsource')
            implementation project(':jul:jul-xml')
            testImplementation libraries.'junit-jupiter-api'
            testRuntimeOnly libraries.'junit-jupiter-engine'
        }
        tasks.withType(Test).configureEach { useJUnitPlatform() }
    }
}

project(':jul:jul-xml-import') {
    plugins.withId('java') {
        dependencies {
            implementation libraries.'sulky-tasks'
            implementation libraries.'sulky-buffers'
            implementation libraries.'sulky-formatting'
            implementation libraries.'sulky-stax'
            implementation libraries.'commons-io'
            implementation libraries.'slf4j-api'
            implementation project(':lilith-data:eventsource')
            implementation project(':lilith-data:logging')
            implementation project(':jul:jul-xml')
            runtimeOnly libraries.'woodstox'
        }
    }
}

project(':log4j:log4j-xml') {
    plugins.withId('java') {
        dependencies {
            implementation libraries.'sulky-stax'
            implementation libraries.'sulky-formatting'
            implementation libraries.'sulky-tasks'
            implementation libraries.'sulky-buffers'
            implementation libraries.'slf4j-api'
            implementation libraries.'log4j-1x'
            implementation libraries.'commons-io'
            implementation project(':lilith-data:logging')
            implementation project(':lilith-data:eventsource')
            runtimeOnly libraries.'woodstox'
        }
    }
}

project(':log4j:converter-log4j2') {
    plugins.withId('java') {
        dependencies {
            implementation libraries.'sulky-codec'
            implementation libraries.'slf4j-api'
            implementation libraries.'log4j2-core'
            implementation libraries.'log4j2-api'
            implementation project(':lilith-data:logging')
            implementation project(':lilith-data:eventsource')
            implementation project(':lilith-data:converter')
        }
    }
}

project(':log4j:converter-log4j') {
    plugins.withId('java') {
        dependencies {
            implementation libraries.'sulky-stax'
            implementation libraries.'sulky-formatting'
            implementation libraries.'sulky-tasks'
            implementation libraries.'sulky-buffers'
            implementation libraries.'slf4j-api'
            implementation libraries.'log4j-1x'
            implementation project(':lilith-data:logging')
            implementation project(':lilith-data:converter')
            implementation project(':lilith-data:eventsource')
        }
    }
}

project(':log4j:decoder-log4j2') {
    plugins.withId('java') {
        dependencies {
            implementation libraries.'sulky-codec'
            implementation libraries.'slf4j-api'
            implementation libraries.'log4j2-core'
            implementation libraries.'log4j2-api'
            implementation libraries.'jackson-databind'
            implementation libraries.'jackson-dataformat-yaml'
            implementation libraries.'jackson-dataformat-xml'
            implementation project(':log4j:converter-log4j2')
            implementation project(':lilith-data:logging')
            implementation project(':lilith-data:converter')
            testImplementation project(':lilith-data:logging-io-test')
        }
    }
}

project(':log4j:producer-log4j2') {
    plugins.withId('java') {
        dependencies {
            implementation libraries.'sulky-buffers'
            implementation libraries.'sulky-codec'
            implementation libraries.'slf4j-api'
            implementation libraries.'log4j2-core'
            implementation libraries.'log4j2-api'
            implementation project(':log4j:decoder-log4j2')
            implementation project(':lilith-engine')
            implementation project(':lilith-data:logging')
            implementation project(':lilith-data:eventsource')
        }
    }
}

// Logback encoder/converter modules using sulky codec/filebuffer
project(':logback:encoder-core') {
    plugins.withId('java') {
        dependencies {
            implementation libraries.'sulky-codec'
            implementation libraries.'sulky-codec-filebuffer'
            implementation libraries.'logback-core'
            implementation project(':lilith-constants')
        }
    }
}

project(':logback:encoder-classic') {
    plugins.withId('java') {
        dependencies {
            implementation libraries.'sulky-codec'
            implementation libraries.'logback-classic'
            implementation project(':logback:converter-classic')
            implementation project(':logback:encoder-core')
            implementation project(':lilith-constants')
            implementation project(':lilith-data:logging')
            implementation project(':lilith-data:eventsource')
            implementation project(':lilith-data:logging-protobuf')
            implementation project(':lilith-data:converter')
        }
    }
}

project(':logback:encoder-access') {
    plugins.withId('java') {
        dependencies {
            implementation libraries.'sulky-codec'
            implementation libraries.'logback-access'
            implementation project(':logback:converter-access')
            implementation project(':logback:encoder-core')
            implementation project(':lilith-constants')
            implementation project(':lilith-data:access')
            implementation project(':lilith-data:eventsource')
            implementation project(':lilith-data:access-protobuf')
            implementation project(':lilith-data:converter')
        }
    }
}

project(':logback:converter-classic') {
    plugins.withId('java') {
        dependencies {
            implementation libraries.'sulky-codec'
            implementation libraries.'logback-classic'
            implementation project(':logback:classic')
            implementation project(':lilith-data:logging')
            implementation project(':lilith-data:converter')
            implementation project(':lilith-data:eventsource')
        }
    }
}

project(':logback:converter-access') {
    plugins.withId('java') {
        dependencies {
            implementation libraries.'sulky-codec'
            implementation libraries.'logback-access'
            implementation project(':lilith-data:access')
            implementation project(':lilith-data:converter')
            implementation project(':lilith-data:eventsource')
        }
    }
}

project(':logback:multiplex-appender-core') {
    plugins.withId('java') {
        dependencies {
            implementation libraries.'sulky-codec'
            implementation libraries.'sulky-buffers'
            implementation libraries.'logback-core'
            implementation libraries.'sulky-ulid'
            implementation project(':logback:tools')
            implementation project(':lilith-sender')
        }
    }
}

project(':logback:multiplex-appender-classic') {
    plugins.withId('java') {
        dependencies {
            implementation libraries.'logback-classic'
            implementation libraries.'sulky-codec'
            implementation project(':lilith-data:logging-protobuf')
            implementation project(':lilith-sender')
            implementation project(':logback:converter-classic')
            implementation project(':logback:multiplex-appender-core')
        }
    }
}

project(':logback:multiplex-appender-access') {
    plugins.withId('java') {
        dependencies {
            implementation libraries.'logback-access'
            implementation libraries.'sulky-codec'
            implementation project(':lilith-data:access')
            implementation project(':lilith-data:access-protobuf')
            implementation project(':lilith-sender')
            implementation project(':logback:converter-access')
            implementation project(':logback:multiplex-appender-core')
        }
    }
}

project(':logback:multiplex-appender-classic-xml') {
    plugins.withId('java') {
        dependencies {
            implementation libraries.'logback-classic'
            implementation libraries.'sulky-codec'
            implementation project(':lilith-data:logging-xml-serializer')
            implementation project(':lilith-sender')
            implementation project(':logback:converter-classic')
            implementation project(':logback:multiplex-appender-core')
        }
    }
}

project(':logback:multiplex-appender-classic-json') {
    plugins.withId('java') {
        dependencies {
            implementation libraries.'logback-classic'
            implementation libraries.'sulky-codec'
            implementation project(':lilith-data:logging-json-serializer')
            implementation project(':lilith-sender')
            implementation project(':logback:converter-classic')
            implementation project(':logback:multiplex-appender-core')
        }
    }
}

project(':logback:shutdown-context-listener') {
    plugins.withId('java') {
        dependencies {
            compileOnly libraries.'servlet-api'
            implementation libraries.'logback-classic'
            implementation libraries.'slf4j-api'
            implementation project(':logback:tools')
        }
    }
}
project(':lilith-prefs') {
    plugins.withId('java') {
        dependencies {
            implementation libraries.'protobuf'
            implementation libraries.'sulky-codec'
        }
    }
}
project(':lilith-data:logging-json-serializer') {
    plugins.withId('java') {
        dependencies {
            implementation libraries.'jackson-core'
            implementation libraries.'jackson-databind'
            implementation libraries.'jackson-module-afterburner'
            implementation libraries.'sulky-codec'
            implementation project(':lilith-data:logging')
            implementation project(':lilith-data:eventsource')
            testImplementation project(':lilith-data:logging-io-test')
        }
    }
}
project(':logback:classic') {
    plugins.withId('java') {
        dependencies {
            implementation project(':lilith-data:logging')
            implementation libraries.'slf4j-api'
        }
    }
}

project(':logback:tools') {
    plugins.withId('java') {
        dependencies {
            implementation libraries.'logback-core'
            implementation libraries.'slf4j-api'
        }
    }
}
